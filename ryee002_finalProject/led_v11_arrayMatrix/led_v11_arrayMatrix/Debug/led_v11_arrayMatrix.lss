
led_v11_arrayMatrix.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  0000071e  000007b2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000071e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000ec  00800106  00800106  000007b8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000007b8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000007e8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00000828  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000e4d  00000000  00000000  000008b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a70  00000000  00000000  000016fd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000007d5  00000000  00000000  0000216d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001dc  00000000  00000000  00002944  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005a4  00000000  00000000  00002b20  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005c9  00000000  00000000  000030c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  0000368d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	b2 c0       	rjmp	.+356    	; 0x19a <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ee e1       	ldi	r30, 0x1E	; 30
  a0:	f7 e0       	ldi	r31, 0x07	; 7
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a6 30       	cpi	r26, 0x06	; 6
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a6 e0       	ldi	r26, 0x06	; 6
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a2 3f       	cpi	r26, 0xF2	; 242
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	a2 d2       	rcall	.+1348   	; 0x608 <main>
  c4:	2a c3       	rjmp	.+1620   	; 0x71a <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <TimerISR>:
		if(c==0){return b;}
		a = b;
		b = c;
	}
	return 0;
}
  c8:	cf 92       	push	r12
  ca:	df 92       	push	r13
  cc:	ef 92       	push	r14
  ce:	ff 92       	push	r15
  d0:	1f 93       	push	r17
  d2:	cf 93       	push	r28
  d4:	df 93       	push	r29
  d6:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <i.1614>
  da:	80 91 25 01 	lds	r24, 0x0125	; 0x800125 <tasksNum>
  de:	88 23       	and	r24, r24
  e0:	09 f4       	brne	.+2      	; 0xe4 <TimerISR+0x1c>
  e2:	53 c0       	rjmp	.+166    	; 0x18a <TimerISR+0xc2>
  e4:	80 e0       	ldi	r24, 0x00	; 0
  e6:	1b e0       	ldi	r17, 0x0B	; 11
  e8:	c0 91 2a 01 	lds	r28, 0x012A	; 0x80012a <tasks>
  ec:	d0 91 2b 01 	lds	r29, 0x012B	; 0x80012b <tasks+0x1>
  f0:	18 9f       	mul	r17, r24
  f2:	c0 0d       	add	r28, r0
  f4:	d1 1d       	adc	r29, r1
  f6:	11 24       	eor	r1, r1
  f8:	4d 81       	ldd	r20, Y+5	; 0x05
  fa:	5e 81       	ldd	r21, Y+6	; 0x06
  fc:	6f 81       	ldd	r22, Y+7	; 0x07
  fe:	78 85       	ldd	r23, Y+8	; 0x08
 100:	89 81       	ldd	r24, Y+1	; 0x01
 102:	9a 81       	ldd	r25, Y+2	; 0x02
 104:	ab 81       	ldd	r26, Y+3	; 0x03
 106:	bc 81       	ldd	r27, Y+4	; 0x04
 108:	48 17       	cp	r20, r24
 10a:	59 07       	cpc	r21, r25
 10c:	6a 07       	cpc	r22, r26
 10e:	7b 07       	cpc	r23, r27
 110:	b0 f0       	brcs	.+44     	; 0x13e <TimerISR+0x76>
 112:	88 81       	ld	r24, Y
 114:	e9 85       	ldd	r30, Y+9	; 0x09
 116:	fa 85       	ldd	r31, Y+10	; 0x0a
 118:	08 2e       	mov	r0, r24
 11a:	00 0c       	add	r0, r0
 11c:	99 0b       	sbc	r25, r25
 11e:	09 95       	icall
 120:	88 83       	st	Y, r24
 122:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <i.1614>
 126:	e0 91 2a 01 	lds	r30, 0x012A	; 0x80012a <tasks>
 12a:	f0 91 2b 01 	lds	r31, 0x012B	; 0x80012b <tasks+0x1>
 12e:	18 9f       	mul	r17, r24
 130:	e0 0d       	add	r30, r0
 132:	f1 1d       	adc	r31, r1
 134:	11 24       	eor	r1, r1
 136:	15 82       	std	Z+5, r1	; 0x05
 138:	16 82       	std	Z+6, r1	; 0x06
 13a:	17 82       	std	Z+7, r1	; 0x07
 13c:	10 86       	std	Z+8, r1	; 0x08
 13e:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <i.1614>
 142:	e0 91 2a 01 	lds	r30, 0x012A	; 0x80012a <tasks>
 146:	f0 91 2b 01 	lds	r31, 0x012B	; 0x80012b <tasks+0x1>
 14a:	18 9f       	mul	r17, r24
 14c:	e0 0d       	add	r30, r0
 14e:	f1 1d       	adc	r31, r1
 150:	11 24       	eor	r1, r1
 152:	c5 80       	ldd	r12, Z+5	; 0x05
 154:	d6 80       	ldd	r13, Z+6	; 0x06
 156:	e7 80       	ldd	r14, Z+7	; 0x07
 158:	f0 84       	ldd	r15, Z+8	; 0x08
 15a:	40 91 02 01 	lds	r20, 0x0102	; 0x800102 <tasksPeriodGCD>
 15e:	50 91 03 01 	lds	r21, 0x0103	; 0x800103 <tasksPeriodGCD+0x1>
 162:	60 91 04 01 	lds	r22, 0x0104	; 0x800104 <tasksPeriodGCD+0x2>
 166:	70 91 05 01 	lds	r23, 0x0105	; 0x800105 <tasksPeriodGCD+0x3>
 16a:	4c 0d       	add	r20, r12
 16c:	5d 1d       	adc	r21, r13
 16e:	6e 1d       	adc	r22, r14
 170:	7f 1d       	adc	r23, r15
 172:	45 83       	std	Z+5, r20	; 0x05
 174:	56 83       	std	Z+6, r21	; 0x06
 176:	67 83       	std	Z+7, r22	; 0x07
 178:	70 87       	std	Z+8, r23	; 0x08
 17a:	8f 5f       	subi	r24, 0xFF	; 255
 17c:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <i.1614>
 180:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <tasksNum>
 184:	89 17       	cp	r24, r25
 186:	08 f4       	brcc	.+2      	; 0x18a <TimerISR+0xc2>
 188:	af cf       	rjmp	.-162    	; 0xe8 <TimerISR+0x20>
 18a:	df 91       	pop	r29
 18c:	cf 91       	pop	r28
 18e:	1f 91       	pop	r17
 190:	ff 90       	pop	r15
 192:	ef 90       	pop	r14
 194:	df 90       	pop	r13
 196:	cf 90       	pop	r12
 198:	08 95       	ret

0000019a <__vector_13>:
 19a:	1f 92       	push	r1
 19c:	0f 92       	push	r0
 19e:	0f b6       	in	r0, 0x3f	; 63
 1a0:	0f 92       	push	r0
 1a2:	11 24       	eor	r1, r1
 1a4:	0b b6       	in	r0, 0x3b	; 59
 1a6:	0f 92       	push	r0
 1a8:	2f 93       	push	r18
 1aa:	3f 93       	push	r19
 1ac:	4f 93       	push	r20
 1ae:	5f 93       	push	r21
 1b0:	6f 93       	push	r22
 1b2:	7f 93       	push	r23
 1b4:	8f 93       	push	r24
 1b6:	9f 93       	push	r25
 1b8:	af 93       	push	r26
 1ba:	bf 93       	push	r27
 1bc:	ef 93       	push	r30
 1be:	ff 93       	push	r31
 1c0:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <tasksPeriodCntDown>
 1c4:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <tasksPeriodCntDown+0x1>
 1c8:	a0 91 28 01 	lds	r26, 0x0128	; 0x800128 <tasksPeriodCntDown+0x2>
 1cc:	b0 91 29 01 	lds	r27, 0x0129	; 0x800129 <tasksPeriodCntDown+0x3>
 1d0:	01 97       	sbiw	r24, 0x01	; 1
 1d2:	a1 09       	sbc	r26, r1
 1d4:	b1 09       	sbc	r27, r1
 1d6:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <tasksPeriodCntDown>
 1da:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <tasksPeriodCntDown+0x1>
 1de:	a0 93 28 01 	sts	0x0128, r26	; 0x800128 <tasksPeriodCntDown+0x2>
 1e2:	b0 93 29 01 	sts	0x0129, r27	; 0x800129 <tasksPeriodCntDown+0x3>
 1e6:	89 2b       	or	r24, r25
 1e8:	8a 2b       	or	r24, r26
 1ea:	8b 2b       	or	r24, r27
 1ec:	89 f4       	brne	.+34     	; 0x210 <__vector_13+0x76>
 1ee:	6c df       	rcall	.-296    	; 0xc8 <TimerISR>
 1f0:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <tasksPeriodGCD>
 1f4:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <tasksPeriodGCD+0x1>
 1f8:	a0 91 04 01 	lds	r26, 0x0104	; 0x800104 <tasksPeriodGCD+0x2>
 1fc:	b0 91 05 01 	lds	r27, 0x0105	; 0x800105 <tasksPeriodGCD+0x3>
 200:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <tasksPeriodCntDown>
 204:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <tasksPeriodCntDown+0x1>
 208:	a0 93 28 01 	sts	0x0128, r26	; 0x800128 <tasksPeriodCntDown+0x2>
 20c:	b0 93 29 01 	sts	0x0129, r27	; 0x800129 <tasksPeriodCntDown+0x3>
 210:	ff 91       	pop	r31
 212:	ef 91       	pop	r30
 214:	bf 91       	pop	r27
 216:	af 91       	pop	r26
 218:	9f 91       	pop	r25
 21a:	8f 91       	pop	r24
 21c:	7f 91       	pop	r23
 21e:	6f 91       	pop	r22
 220:	5f 91       	pop	r21
 222:	4f 91       	pop	r20
 224:	3f 91       	pop	r19
 226:	2f 91       	pop	r18
 228:	0f 90       	pop	r0
 22a:	0b be       	out	0x3b, r0	; 59
 22c:	0f 90       	pop	r0
 22e:	0f be       	out	0x3f, r0	; 63
 230:	0f 90       	pop	r0
 232:	1f 90       	pop	r1
 234:	18 95       	reti

00000236 <TimerSet>:
 236:	60 93 02 01 	sts	0x0102, r22	; 0x800102 <tasksPeriodGCD>
 23a:	70 93 03 01 	sts	0x0103, r23	; 0x800103 <tasksPeriodGCD+0x1>
 23e:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <tasksPeriodGCD+0x2>
 242:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <tasksPeriodGCD+0x3>
 246:	60 93 26 01 	sts	0x0126, r22	; 0x800126 <tasksPeriodCntDown>
 24a:	70 93 27 01 	sts	0x0127, r23	; 0x800127 <tasksPeriodCntDown+0x1>
 24e:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <tasksPeriodCntDown+0x2>
 252:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <tasksPeriodCntDown+0x3>
 256:	08 95       	ret

00000258 <TimerOn>:
 258:	8b e0       	ldi	r24, 0x0B	; 11
 25a:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 25e:	8d e7       	ldi	r24, 0x7D	; 125
 260:	90 e0       	ldi	r25, 0x00	; 0
 262:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 266:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 26a:	82 e0       	ldi	r24, 0x02	; 2
 26c:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 270:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 274:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 278:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <tasksPeriodGCD>
 27c:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <tasksPeriodGCD+0x1>
 280:	a0 91 04 01 	lds	r26, 0x0104	; 0x800104 <tasksPeriodGCD+0x2>
 284:	b0 91 05 01 	lds	r27, 0x0105	; 0x800105 <tasksPeriodGCD+0x3>
 288:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <tasksPeriodCntDown>
 28c:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <tasksPeriodCntDown+0x1>
 290:	a0 93 28 01 	sts	0x0128, r26	; 0x800128 <tasksPeriodCntDown+0x2>
 294:	b0 93 29 01 	sts	0x0129, r27	; 0x800129 <tasksPeriodCntDown+0x3>
 298:	8f b7       	in	r24, 0x3f	; 63
 29a:	80 68       	ori	r24, 0x80	; 128
 29c:	8f bf       	out	0x3f, r24	; 63
 29e:	08 95       	ret

000002a0 <adc_init>:
 2a0:	ea e7       	ldi	r30, 0x7A	; 122
 2a2:	f0 e0       	ldi	r31, 0x00	; 0
 2a4:	80 81       	ld	r24, Z
 2a6:	80 6e       	ori	r24, 0xE0	; 224
 2a8:	80 83       	st	Z, r24
 2aa:	08 95       	ret

000002ac <Set_A2D_Pin>:
 2ac:	88 30       	cpi	r24, 0x08	; 8
 2ae:	60 f0       	brcs	.+24     	; 0x2c8 <Set_A2D_Pin+0x1c>
 2b0:	ec e7       	ldi	r30, 0x7C	; 124
 2b2:	f0 e0       	ldi	r31, 0x00	; 0
 2b4:	80 81       	ld	r24, Z
 2b6:	80 83       	st	Z, r24
 2b8:	8f e0       	ldi	r24, 0x0F	; 15
 2ba:	00 00       	nop
 2bc:	81 50       	subi	r24, 0x01	; 1
 2be:	e9 f7       	brne	.-6      	; 0x2ba <Set_A2D_Pin+0xe>
 2c0:	8f e0       	ldi	r24, 0x0F	; 15
 2c2:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <i.1634>
 2c6:	08 95       	ret
 2c8:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
 2cc:	f5 cf       	rjmp	.-22     	; 0x2b8 <Set_A2D_Pin+0xc>

000002ce <transmit_data>:
 2ce:	43 9a       	sbi	0x08, 3	; 8
 2d0:	41 98       	cbi	0x08, 1	; 8
 2d2:	10 92 23 01 	sts	0x0123, r1	; 0x800123 <i>
 2d6:	41 e0       	ldi	r20, 0x01	; 1
 2d8:	50 e0       	ldi	r21, 0x00	; 0
 2da:	42 98       	cbi	0x08, 2	; 8
 2dc:	9a 01       	movw	r18, r20
 2de:	00 90 23 01 	lds	r0, 0x0123	; 0x800123 <i>
 2e2:	02 c0       	rjmp	.+4      	; 0x2e8 <transmit_data+0x1a>
 2e4:	22 0f       	add	r18, r18
 2e6:	33 1f       	adc	r19, r19
 2e8:	0a 94       	dec	r0
 2ea:	e2 f7       	brpl	.-8      	; 0x2e4 <transmit_data+0x16>
 2ec:	28 23       	and	r18, r24
 2ee:	11 f0       	breq	.+4      	; 0x2f4 <transmit_data+0x26>
 2f0:	40 9a       	sbi	0x08, 0	; 8
 2f2:	01 c0       	rjmp	.+2      	; 0x2f6 <transmit_data+0x28>
 2f4:	40 98       	cbi	0x08, 0	; 8
 2f6:	42 9a       	sbi	0x08, 2	; 8
 2f8:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <i>
 2fc:	9f 5f       	subi	r25, 0xFF	; 255
 2fe:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <i>
 302:	98 30       	cpi	r25, 0x08	; 8
 304:	50 f3       	brcs	.-44     	; 0x2da <transmit_data+0xc>
 306:	41 9a       	sbi	0x08, 1	; 8
 308:	08 95       	ret

0000030a <udlr>:
 30a:	cf 93       	push	r28
 30c:	df 93       	push	r29
 30e:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <state>
 312:	82 30       	cpi	r24, 0x02	; 2
 314:	09 f4       	brne	.+2      	; 0x318 <udlr+0xe>
 316:	77 c0       	rjmp	.+238    	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 318:	30 f4       	brcc	.+12     	; 0x326 <udlr+0x1c>
 31a:	88 23       	and	r24, r24
 31c:	59 f0       	breq	.+22     	; 0x334 <udlr+0x2a>
 31e:	81 30       	cpi	r24, 0x01	; 1
 320:	09 f4       	brne	.+2      	; 0x324 <udlr+0x1a>
 322:	6e c0       	rjmp	.+220    	; 0x400 <__LOCK_REGION_LENGTH__>
 324:	79 c0       	rjmp	.+242    	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 326:	83 30       	cpi	r24, 0x03	; 3
 328:	09 f4       	brne	.+2      	; 0x32c <udlr+0x22>
 32a:	70 c0       	rjmp	.+224    	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 32c:	84 30       	cpi	r24, 0x04	; 4
 32e:	09 f4       	brne	.+2      	; 0x332 <udlr+0x28>
 330:	70 c0       	rjmp	.+224    	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 332:	72 c0       	rjmp	.+228    	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 334:	80 e0       	ldi	r24, 0x00	; 0
 336:	ba df       	rcall	.-140    	; 0x2ac <Set_A2D_Pin>
 338:	c8 e7       	ldi	r28, 0x78	; 120
 33a:	d0 e0       	ldi	r29, 0x00	; 0
 33c:	88 81       	ld	r24, Y
 33e:	99 81       	ldd	r25, Y+1	; 0x01
 340:	90 93 22 01 	sts	0x0122, r25	; 0x800122 <lr+0x1>
 344:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <lr>
 348:	81 e0       	ldi	r24, 0x01	; 1
 34a:	b0 df       	rcall	.-160    	; 0x2ac <Set_A2D_Pin>
 34c:	28 81       	ld	r18, Y
 34e:	39 81       	ldd	r19, Y+1	; 0x01
 350:	30 93 20 01 	sts	0x0120, r19	; 0x800120 <ud+0x1>
 354:	20 93 1f 01 	sts	0x011F, r18	; 0x80011f <ud>
 358:	80 91 21 01 	lds	r24, 0x0121	; 0x800121 <lr>
 35c:	90 91 22 01 	lds	r25, 0x0122	; 0x800122 <lr+0x1>
 360:	ac 01       	movw	r20, r24
 362:	45 5f       	subi	r20, 0xF5	; 245
 364:	51 40       	sbci	r21, 0x01	; 1
 366:	43 36       	cpi	r20, 0x63	; 99
 368:	51 05       	cpc	r21, r1
 36a:	48 f4       	brcc	.+18     	; 0x37e <udlr+0x74>
 36c:	a9 01       	movw	r20, r18
 36e:	45 5f       	subi	r20, 0xF5	; 245
 370:	51 40       	sbci	r21, 0x01	; 1
 372:	43 36       	cpi	r20, 0x63	; 99
 374:	51 05       	cpc	r21, r1
 376:	18 f4       	brcc	.+6      	; 0x37e <udlr+0x74>
 378:	10 92 2c 01 	sts	0x012C, r1	; 0x80012c <state>
 37c:	ce c0       	rjmp	.+412    	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 37e:	8e 35       	cpi	r24, 0x5E	; 94
 380:	41 e0       	ldi	r20, 0x01	; 1
 382:	94 07       	cpc	r25, r20
 384:	68 f4       	brcc	.+26     	; 0x3a0 <udlr+0x96>
 386:	a9 01       	movw	r20, r18
 388:	52 50       	subi	r21, 0x02	; 2
 38a:	47 30       	cpi	r20, 0x07	; 7
 38c:	6f ef       	ldi	r22, 0xFF	; 255
 38e:	56 07       	cpc	r21, r22
 390:	c4 f0       	brlt	.+48     	; 0x3c2 <udlr+0xb8>
 392:	4a 3f       	cpi	r20, 0xFA	; 250
 394:	51 05       	cpc	r21, r1
 396:	ac f4       	brge	.+42     	; 0x3c2 <udlr+0xb8>
 398:	81 e0       	ldi	r24, 0x01	; 1
 39a:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <state>
 39e:	4a c0       	rjmp	.+148    	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 3a0:	83 35       	cpi	r24, 0x53	; 83
 3a2:	43 e0       	ldi	r20, 0x03	; 3
 3a4:	94 07       	cpc	r25, r20
 3a6:	68 f0       	brcs	.+26     	; 0x3c2 <udlr+0xb8>
 3a8:	a9 01       	movw	r20, r18
 3aa:	52 50       	subi	r21, 0x02	; 2
 3ac:	47 30       	cpi	r20, 0x07	; 7
 3ae:	6f ef       	ldi	r22, 0xFF	; 255
 3b0:	56 07       	cpc	r21, r22
 3b2:	3c f0       	brlt	.+14     	; 0x3c2 <udlr+0xb8>
 3b4:	4a 3f       	cpi	r20, 0xFA	; 250
 3b6:	51 05       	cpc	r21, r1
 3b8:	24 f4       	brge	.+8      	; 0x3c2 <udlr+0xb8>
 3ba:	82 e0       	ldi	r24, 0x02	; 2
 3bc:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <state>
 3c0:	45 c0       	rjmp	.+138    	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 3c2:	23 35       	cpi	r18, 0x53	; 83
 3c4:	43 e0       	ldi	r20, 0x03	; 3
 3c6:	34 07       	cpc	r19, r20
 3c8:	60 f0       	brcs	.+24     	; 0x3e2 <udlr+0xd8>
 3ca:	92 50       	subi	r25, 0x02	; 2
 3cc:	87 30       	cpi	r24, 0x07	; 7
 3ce:	6f ef       	ldi	r22, 0xFF	; 255
 3d0:	96 07       	cpc	r25, r22
 3d2:	14 f1       	brlt	.+68     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 3d4:	8a 3f       	cpi	r24, 0xFA	; 250
 3d6:	91 05       	cpc	r25, r1
 3d8:	fc f4       	brge	.+62     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 3da:	83 e0       	ldi	r24, 0x03	; 3
 3dc:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <state>
 3e0:	41 c0       	rjmp	.+130    	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 3e2:	2e 35       	cpi	r18, 0x5E	; 94
 3e4:	31 40       	sbci	r19, 0x01	; 1
 3e6:	c0 f4       	brcc	.+48     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 3e8:	92 50       	subi	r25, 0x02	; 2
 3ea:	87 30       	cpi	r24, 0x07	; 7
 3ec:	6f ef       	ldi	r22, 0xFF	; 255
 3ee:	96 07       	cpc	r25, r22
 3f0:	9c f0       	brlt	.+38     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 3f2:	8a 3f       	cpi	r24, 0xFA	; 250
 3f4:	91 05       	cpc	r25, r1
 3f6:	84 f4       	brge	.+32     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 3f8:	84 e0       	ldi	r24, 0x04	; 4
 3fa:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <state>
 3fe:	5f c0       	rjmp	.+190    	; 0x4be <__LOCK_REGION_LENGTH__+0xbe>
 400:	10 92 2c 01 	sts	0x012C, r1	; 0x80012c <state>
 404:	8a c0       	rjmp	.+276    	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 406:	10 92 2c 01 	sts	0x012C, r1	; 0x80012c <state>
 40a:	87 c0       	rjmp	.+270    	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 40c:	10 92 2c 01 	sts	0x012C, r1	; 0x80012c <state>
 410:	84 c0       	rjmp	.+264    	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 412:	10 92 2c 01 	sts	0x012C, r1	; 0x80012c <state>
 416:	81 c0       	rjmp	.+258    	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 418:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <state>
 41c:	82 30       	cpi	r24, 0x02	; 2
 41e:	b1 f0       	breq	.+44     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 420:	18 f4       	brcc	.+6      	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 422:	81 30       	cpi	r24, 0x01	; 1
 424:	39 f0       	breq	.+14     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 426:	79 c0       	rjmp	.+242    	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 428:	83 30       	cpi	r24, 0x03	; 3
 42a:	e1 f0       	breq	.+56     	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 42c:	84 30       	cpi	r24, 0x04	; 4
 42e:	09 f4       	brne	.+2      	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 430:	46 c0       	rjmp	.+140    	; 0x4be <__LOCK_REGION_LENGTH__+0xbe>
 432:	73 c0       	rjmp	.+230    	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 434:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <pattern>
 438:	80 38       	cpi	r24, 0x80	; 128
 43a:	21 f4       	brne	.+8      	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 43c:	81 e0       	ldi	r24, 0x01	; 1
 43e:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <pattern>
 442:	6b c0       	rjmp	.+214    	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 444:	88 0f       	add	r24, r24
 446:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <pattern>
 44a:	67 c0       	rjmp	.+206    	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 44c:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <pattern>
 450:	81 30       	cpi	r24, 0x01	; 1
 452:	21 f4       	brne	.+8      	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 454:	80 e8       	ldi	r24, 0x80	; 128
 456:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <pattern>
 45a:	5f c0       	rjmp	.+190    	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 45c:	86 95       	lsr	r24
 45e:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <pattern>
 462:	5b c0       	rjmp	.+182    	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 464:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <cnt>
 468:	88 23       	and	r24, r24
 46a:	29 f0       	breq	.+10     	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 46c:	81 50       	subi	r24, 0x01	; 1
 46e:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <cnt>
 472:	81 11       	cpse	r24, r1
 474:	04 c0       	rjmp	.+8      	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
 476:	8e e1       	ldi	r24, 0x1E	; 30
 478:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 47c:	4e c0       	rjmp	.+156    	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 47e:	81 30       	cpi	r24, 0x01	; 1
 480:	21 f4       	brne	.+8      	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
 482:	8d e1       	ldi	r24, 0x1D	; 29
 484:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 488:	48 c0       	rjmp	.+144    	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 48a:	82 30       	cpi	r24, 0x02	; 2
 48c:	21 f4       	brne	.+8      	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
 48e:	8b e1       	ldi	r24, 0x1B	; 27
 490:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 494:	42 c0       	rjmp	.+132    	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 496:	83 30       	cpi	r24, 0x03	; 3
 498:	21 f4       	brne	.+8      	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
 49a:	87 e1       	ldi	r24, 0x17	; 23
 49c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 4a0:	3c c0       	rjmp	.+120    	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 4a2:	84 30       	cpi	r24, 0x04	; 4
 4a4:	21 f4       	brne	.+8      	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 4a6:	8f e0       	ldi	r24, 0x0F	; 15
 4a8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 4ac:	36 c0       	rjmp	.+108    	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 4ae:	85 30       	cpi	r24, 0x05	; 5
 4b0:	a1 f5       	brne	.+104    	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 4b2:	8e e1       	ldi	r24, 0x1E	; 30
 4b4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 4b8:	10 92 1e 01 	sts	0x011E, r1	; 0x80011e <cnt>
 4bc:	2e c0       	rjmp	.+92     	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 4be:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <cnt>
 4c2:	85 30       	cpi	r24, 0x05	; 5
 4c4:	18 f4       	brcc	.+6      	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
 4c6:	8f 5f       	subi	r24, 0xFF	; 255
 4c8:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <cnt>
 4cc:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <cnt>
 4d0:	81 11       	cpse	r24, r1
 4d2:	04 c0       	rjmp	.+8      	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 4d4:	8e e1       	ldi	r24, 0x1E	; 30
 4d6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 4da:	1f c0       	rjmp	.+62     	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 4dc:	81 30       	cpi	r24, 0x01	; 1
 4de:	21 f4       	brne	.+8      	; 0x4e8 <__LOCK_REGION_LENGTH__+0xe8>
 4e0:	8d e1       	ldi	r24, 0x1D	; 29
 4e2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 4e6:	19 c0       	rjmp	.+50     	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 4e8:	82 30       	cpi	r24, 0x02	; 2
 4ea:	21 f4       	brne	.+8      	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
 4ec:	8b e1       	ldi	r24, 0x1B	; 27
 4ee:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 4f2:	13 c0       	rjmp	.+38     	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 4f4:	83 30       	cpi	r24, 0x03	; 3
 4f6:	21 f4       	brne	.+8      	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
 4f8:	87 e1       	ldi	r24, 0x17	; 23
 4fa:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 4fe:	0d c0       	rjmp	.+26     	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 500:	84 30       	cpi	r24, 0x04	; 4
 502:	21 f4       	brne	.+8      	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
 504:	8f e0       	ldi	r24, 0x0F	; 15
 506:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 50a:	07 c0       	rjmp	.+14     	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 50c:	85 30       	cpi	r24, 0x05	; 5
 50e:	29 f4       	brne	.+10     	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 510:	8e e1       	ldi	r24, 0x1E	; 30
 512:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 516:	10 92 1e 01 	sts	0x011E, r1	; 0x80011e <cnt>
 51a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 51e:	8b b9       	out	0x0b, r24	; 11
 520:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <pattern>
 524:	d4 de       	rcall	.-600    	; 0x2ce <transmit_data>
 526:	df 91       	pop	r29
 528:	cf 91       	pop	r28
 52a:	08 95       	ret

0000052c <Test_state>:
 52c:	5f 92       	push	r5
 52e:	6f 92       	push	r6
 530:	7f 92       	push	r7
 532:	8f 92       	push	r8
 534:	9f 92       	push	r9
 536:	af 92       	push	r10
 538:	bf 92       	push	r11
 53a:	cf 92       	push	r12
 53c:	df 92       	push	r13
 53e:	ef 92       	push	r14
 540:	ff 92       	push	r15
 542:	0f 93       	push	r16
 544:	1f 93       	push	r17
 546:	cf 93       	push	r28
 548:	df 93       	push	r29
 54a:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <state3>
 54e:	81 11       	cpse	r24, r1
 550:	4b c0       	rjmp	.+150    	; 0x5e8 <Test_state+0xbc>
 552:	ee e2       	ldi	r30, 0x2E	; 46
 554:	f1 e0       	ldi	r31, 0x01	; 1
 556:	81 e0       	ldi	r24, 0x01	; 1
 558:	82 83       	std	Z+2, r24	; 0x02
 55a:	83 83       	std	Z+3, r24	; 0x03
 55c:	85 83       	std	Z+5, r24	; 0x05
 55e:	86 83       	std	Z+6, r24	; 0x06
 560:	87 87       	std	Z+15, r24	; 0x0f
 562:	82 8b       	std	Z+18, r24	; 0x12
 564:	85 8b       	std	Z+21, r24	; 0x15
 566:	85 8f       	std	Z+29, r24	; 0x1d
 568:	83 a3       	std	Z+35, r24	; 0x23
 56a:	84 a7       	std	Z+44, r24	; 0x2c
 56c:	80 ab       	std	Z+48, r24	; 0x30
 56e:	83 af       	std	Z+59, r24	; 0x3b
 570:	84 af       	std	Z+60, r24	; 0x3c
 572:	85 af       	std	Z+61, r24	; 0x3d
 574:	6f 01       	movw	r12, r30
 576:	e1 2c       	mov	r14, r1
 578:	f1 2c       	mov	r15, r1
 57a:	aa 24       	eor	r10, r10
 57c:	aa 94       	dec	r10
 57e:	b1 2c       	mov	r11, r1
 580:	61 2c       	mov	r6, r1
 582:	71 2c       	mov	r7, r1
 584:	88 24       	eor	r8, r8
 586:	83 94       	inc	r8
 588:	91 2c       	mov	r9, r1
 58a:	21 c0       	rjmp	.+66     	; 0x5ce <Test_state+0xa2>
 58c:	f8 01       	movw	r30, r16
 58e:	81 91       	ld	r24, Z+
 590:	8f 01       	movw	r16, r30
 592:	81 30       	cpi	r24, 0x01	; 1
 594:	71 f4       	brne	.+28     	; 0x5b2 <Test_state+0x86>
 596:	c4 01       	movw	r24, r8
 598:	0c 2e       	mov	r0, r28
 59a:	02 c0       	rjmp	.+4      	; 0x5a0 <Test_state+0x74>
 59c:	88 0f       	add	r24, r24
 59e:	99 1f       	adc	r25, r25
 5a0:	0a 94       	dec	r0
 5a2:	e2 f7       	brpl	.-8      	; 0x59c <Test_state+0x70>
 5a4:	86 29       	or	r24, r6
 5a6:	68 2e       	mov	r6, r24
 5a8:	95 2d       	mov	r25, r5
 5aa:	9a 21       	and	r25, r10
 5ac:	a9 2e       	mov	r10, r25
 5ae:	9b b9       	out	0x0b, r25	; 11
 5b0:	8e de       	rcall	.-740    	; 0x2ce <transmit_data>
 5b2:	21 96       	adiw	r28, 0x01	; 1
 5b4:	c8 30       	cpi	r28, 0x08	; 8
 5b6:	d1 05       	cpc	r29, r1
 5b8:	49 f7       	brne	.-46     	; 0x58c <Test_state+0x60>
 5ba:	2f ef       	ldi	r18, 0xFF	; 255
 5bc:	e2 1a       	sub	r14, r18
 5be:	f2 0a       	sbc	r15, r18
 5c0:	8e e0       	ldi	r24, 0x0E	; 14
 5c2:	c8 0e       	add	r12, r24
 5c4:	d1 1c       	adc	r13, r1
 5c6:	e5 e0       	ldi	r30, 0x05	; 5
 5c8:	ee 16       	cp	r14, r30
 5ca:	f1 04       	cpc	r15, r1
 5cc:	69 f0       	breq	.+26     	; 0x5e8 <Test_state+0xbc>
 5ce:	c4 01       	movw	r24, r8
 5d0:	0e 2c       	mov	r0, r14
 5d2:	02 c0       	rjmp	.+4      	; 0x5d8 <Test_state+0xac>
 5d4:	88 0f       	add	r24, r24
 5d6:	99 1f       	adc	r25, r25
 5d8:	0a 94       	dec	r0
 5da:	e2 f7       	brpl	.-8      	; 0x5d4 <Test_state+0xa8>
 5dc:	58 2e       	mov	r5, r24
 5de:	50 94       	com	r5
 5e0:	86 01       	movw	r16, r12
 5e2:	c0 e0       	ldi	r28, 0x00	; 0
 5e4:	d0 e0       	ldi	r29, 0x00	; 0
 5e6:	d2 cf       	rjmp	.-92     	; 0x58c <Test_state+0x60>
 5e8:	df 91       	pop	r29
 5ea:	cf 91       	pop	r28
 5ec:	1f 91       	pop	r17
 5ee:	0f 91       	pop	r16
 5f0:	ff 90       	pop	r15
 5f2:	ef 90       	pop	r14
 5f4:	df 90       	pop	r13
 5f6:	cf 90       	pop	r12
 5f8:	bf 90       	pop	r11
 5fa:	af 90       	pop	r10
 5fc:	9f 90       	pop	r9
 5fe:	8f 90       	pop	r8
 600:	7f 90       	pop	r7
 602:	6f 90       	pop	r6
 604:	5f 90       	pop	r5
 606:	08 95       	ret

00000608 <main>:



int main(void)
{
 608:	cf 93       	push	r28
 60a:	df 93       	push	r29
 60c:	00 d0       	rcall	.+0      	; 0x60e <main+0x6>
 60e:	00 d0       	rcall	.+0      	; 0x610 <main+0x8>
 610:	cd b7       	in	r28, 0x3d	; 61
 612:	de b7       	in	r29, 0x3e	; 62
	/* Replace with your application code */
	DDRA = 0x00; PORTA = 0xFF;
 614:	11 b8       	out	0x01, r1	; 1
 616:	8f ef       	ldi	r24, 0xFF	; 255
 618:	82 b9       	out	0x02, r24	; 2
	DDRB = 0xFF; PORTB = 0x00; //led
 61a:	84 b9       	out	0x04, r24	; 4
 61c:	15 b8       	out	0x05, r1	; 5
	DDRC = 0xFF; PORTC = 0x00;
 61e:	87 b9       	out	0x07, r24	; 7
 620:	18 b8       	out	0x08, r1	; 8
	DDRD = 0xFF; PORTD = 0x00;
 622:	8a b9       	out	0x0a, r24	; 10
 624:	1b b8       	out	0x0b, r1	; 11
	adc_init();
 626:	3c de       	rcall	.-904    	; 0x2a0 <adc_init>
	
	unsigned long int tmpGCD = 1;
	tmpGCD = findGCD(SMTick1_calc, SMTick2_calc);
	unsigned long int GCD = tmpGCD;
	
	TimerSet(GCD);
 628:	6a ef       	ldi	r22, 0xFA	; 250
 62a:	70 e0       	ldi	r23, 0x00	; 0
 62c:	80 e0       	ldi	r24, 0x00	; 0
 62e:	90 e0       	ldi	r25, 0x00	; 0
	TimerOn();
 630:	02 de       	rcall	.-1020   	; 0x236 <TimerSet>
 632:	12 de       	rcall	.-988    	; 0x258 <TimerOn>
	unsigned long int SMTick1_period = SMTick1_calc/GCD;
	unsigned long int SMTick2_period = SMTick2_calc/GCD;

	
	static task task1, task2;
	task *tasks[] = { &task1, &task2};
 634:	a1 e1       	ldi	r26, 0x11	; 17
 636:	b1 e0       	ldi	r27, 0x01	; 1
 638:	ba 83       	std	Y+2, r27	; 0x02
 63a:	a9 83       	std	Y+1, r26	; 0x01
 63c:	e6 e0       	ldi	r30, 0x06	; 6
 63e:	f1 e0       	ldi	r31, 0x01	; 1
 640:	fc 83       	std	Y+4, r31	; 0x04
 642:	eb 83       	std	Y+3, r30	; 0x03
	const unsigned short numTasks = sizeof(tasks)/sizeof(task*);

	// Task 1
	task1.state = wait;//Task initial state.
 644:	1c 92       	st	X, r1
	task1.period = SMTick1_period;//Task Period.
 646:	44 e0       	ldi	r20, 0x04	; 4
 648:	50 e0       	ldi	r21, 0x00	; 0
 64a:	60 e0       	ldi	r22, 0x00	; 0
 64c:	70 e0       	ldi	r23, 0x00	; 0
 64e:	11 96       	adiw	r26, 0x01	; 1
 650:	4d 93       	st	X+, r20
 652:	5d 93       	st	X+, r21
 654:	6d 93       	st	X+, r22
 656:	7c 93       	st	X, r23
 658:	14 97       	sbiw	r26, 0x04	; 4
	task1.elapsedTime = SMTick1_period;//Task current elapsed time.
 65a:	15 96       	adiw	r26, 0x05	; 5
 65c:	4d 93       	st	X+, r20
 65e:	5d 93       	st	X+, r21
 660:	6d 93       	st	X+, r22
 662:	7c 93       	st	X, r23
 664:	18 97       	sbiw	r26, 0x08	; 8
	task1.TickFct = &udlr;//Function pointer for the tick.
 666:	85 e8       	ldi	r24, 0x85	; 133
 668:	91 e0       	ldi	r25, 0x01	; 1
 66a:	1a 96       	adiw	r26, 0x0a	; 10
 66c:	9c 93       	st	X, r25
 66e:	8e 93       	st	-X, r24
 670:	19 97       	sbiw	r26, 0x09	; 9

	// Task 2
	task2.state = wait3;//Task initial state. (init)
 672:	10 82       	st	Z, r1
	task2.period = SMTick2_period;//Task Period.
 674:	81 e0       	ldi	r24, 0x01	; 1
 676:	90 e0       	ldi	r25, 0x00	; 0
 678:	a0 e0       	ldi	r26, 0x00	; 0
 67a:	b0 e0       	ldi	r27, 0x00	; 0
 67c:	81 83       	std	Z+1, r24	; 0x01
 67e:	92 83       	std	Z+2, r25	; 0x02
 680:	a3 83       	std	Z+3, r26	; 0x03
 682:	b4 83       	std	Z+4, r27	; 0x04
	task2.elapsedTime = SMTick2_period;//Task current elapsed time.
 684:	85 83       	std	Z+5, r24	; 0x05
 686:	96 83       	std	Z+6, r25	; 0x06
 688:	a7 83       	std	Z+7, r26	; 0x07
 68a:	b0 87       	std	Z+8, r27	; 0x08
	task2.TickFct = &Test_state;//Function pointer for the tick.
 68c:	86 e9       	ldi	r24, 0x96	; 150
 68e:	92 e0       	ldi	r25, 0x02	; 2
 690:	92 87       	std	Z+10, r25	; 0x0a
 692:	81 87       	std	Z+9, r24	; 0x09
 694:	7e 01       	movw	r14, r28
 696:	85 e0       	ldi	r24, 0x05	; 5
 698:	e8 0e       	add	r14, r24
 69a:	f1 1c       	adc	r15, r1
 69c:	de 01       	movw	r26, r28
 69e:	11 96       	adiw	r26, 0x01	; 1
 6a0:	6d 01       	movw	r12, r26
	
	while (1)
	{
		for ( int i = 0; i < numTasks; i++ ) {
			// Task is ready to tick
			if ( tasks[i]->elapsedTime == tasks[i]->period ) {
 6a2:	f6 01       	movw	r30, r12
 6a4:	01 91       	ld	r16, Z+
 6a6:	11 91       	ld	r17, Z+
 6a8:	6f 01       	movw	r12, r30
 6aa:	d8 01       	movw	r26, r16
 6ac:	15 96       	adiw	r26, 0x05	; 5
 6ae:	4d 91       	ld	r20, X+
 6b0:	5d 91       	ld	r21, X+
 6b2:	6d 91       	ld	r22, X+
 6b4:	7c 91       	ld	r23, X
 6b6:	18 97       	sbiw	r26, 0x08	; 8
 6b8:	11 96       	adiw	r26, 0x01	; 1
 6ba:	8d 91       	ld	r24, X+
 6bc:	9d 91       	ld	r25, X+
 6be:	0d 90       	ld	r0, X+
 6c0:	bc 91       	ld	r27, X
 6c2:	a0 2d       	mov	r26, r0
 6c4:	48 17       	cp	r20, r24
 6c6:	59 07       	cpc	r21, r25
 6c8:	6a 07       	cpc	r22, r26
 6ca:	7b 07       	cpc	r23, r27
 6cc:	81 f4       	brne	.+32     	; 0x6ee <main+0xe6>
				// Setting next state for task
				tasks[i]->state = tasks[i]->TickFct(tasks[i]->state);
 6ce:	f8 01       	movw	r30, r16
 6d0:	80 81       	ld	r24, Z
 6d2:	01 84       	ldd	r0, Z+9	; 0x09
 6d4:	f2 85       	ldd	r31, Z+10	; 0x0a
 6d6:	e0 2d       	mov	r30, r0
 6d8:	08 2e       	mov	r0, r24
 6da:	00 0c       	add	r0, r0
 6dc:	99 0b       	sbc	r25, r25
 6de:	09 95       	icall
 6e0:	d8 01       	movw	r26, r16
 6e2:	8c 93       	st	X, r24
				// Reset the elapsed time for next tick.
				tasks[i]->elapsedTime = 0;
 6e4:	f8 01       	movw	r30, r16
 6e6:	15 82       	std	Z+5, r1	; 0x05
 6e8:	16 82       	std	Z+6, r1	; 0x06
 6ea:	17 82       	std	Z+7, r1	; 0x07
 6ec:	10 86       	std	Z+8, r1	; 0x08
			}
			tasks[i]->elapsedTime += 1;
 6ee:	f8 01       	movw	r30, r16
 6f0:	85 81       	ldd	r24, Z+5	; 0x05
 6f2:	96 81       	ldd	r25, Z+6	; 0x06
 6f4:	a7 81       	ldd	r26, Z+7	; 0x07
 6f6:	b0 85       	ldd	r27, Z+8	; 0x08
 6f8:	01 96       	adiw	r24, 0x01	; 1
 6fa:	a1 1d       	adc	r26, r1
 6fc:	b1 1d       	adc	r27, r1
 6fe:	85 83       	std	Z+5, r24	; 0x05
 700:	96 83       	std	Z+6, r25	; 0x06
 702:	a7 83       	std	Z+7, r26	; 0x07
 704:	b0 87       	std	Z+8, r27	; 0x08

	
	
	while (1)
	{
		for ( int i = 0; i < numTasks; i++ ) {
 706:	ce 14       	cp	r12, r14
 708:	df 04       	cpc	r13, r15
 70a:	59 f6       	brne	.-106    	; 0x6a2 <main+0x9a>
				tasks[i]->elapsedTime = 0;
			}
			tasks[i]->elapsedTime += 1;
		}

		while(!TimerFlag);
 70c:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <TimerFlag>
 710:	88 23       	and	r24, r24
 712:	e1 f3       	breq	.-8      	; 0x70c <main+0x104>
		TimerFlag = 0;
 714:	10 92 24 01 	sts	0x0124, r1	; 0x800124 <TimerFlag>
		
	}
 718:	c1 cf       	rjmp	.-126    	; 0x69c <main+0x94>

0000071a <_exit>:
 71a:	f8 94       	cli

0000071c <__stop_program>:
 71c:	ff cf       	rjmp	.-2      	; 0x71c <__stop_program>
